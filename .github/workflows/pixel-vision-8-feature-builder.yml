name: Pixel Vision 8

on:
  push:
    branches: 'v**'

jobs:

  # This runs before the builds and creates the new feature release
  create-release:

    name: "Create Release"
    runs-on: "ubuntu-latest"

    # Steps for the task
    steps:

      # Figure out what the next tag should be
      - id: compute_tag
        uses: craig-day/compute-tag@v10
        with:
          github_token: ${{ github.token }}
          version_scheme: semantic
          version_type: patch

      # Create the new release tag based on the above tag value and pass in the generated change log
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.compute_tag.outputs.next_tag }}
          release_name: Pixel Vision 8 ${{ steps.compute_tag.outputs.next_tag }} Experimental Release
          draft: false
          prerelease: true

  changelogger:
    runs-on: ubuntu-latest
    needs: create-release

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      # Figure out what the CURRENT tag should be
      - id: compute_tag
        uses: craig-day/compute-tag@v10
        with:
          github_token: ${{ github.token }}
          version_scheme: semantic
          version_type: patch

      - name: save Changelog
        id: PREVIOUS_version
        run: |
          IFS='.' read -ra my_array <<< "${{ steps.compute_tag.outputs.next_tag }}"
          echo "CURRENT=${my_array[0]:1}.${my_array[1]}.$((${my_array[2]} - 1))" >> $GITHUB_ENV
          echo "PREVIOUS=${my_array[0]:1}.${my_array[1]}.$((${my_array[2]} - 2))" >> $GITHUB_ENV

      - name: Create Changelog
        id: changelog
        uses: jimschubert/beast-changelog-action@v1
        with:
          FROM: v${{ env.PREVIOUS }}
          TO: v${{ env.CURRENT }}

      - name: save Changelog
        id: log
        run: |
          REPORT="$(cat .github/CHANGELOG.md)"
          REPORT="${REPORT//'%'/'%25'}"
          REPORT="${REPORT//$'\n'/'<br/>'}"
          REPORT="${REPORT//$'## v${{ env.CURRENT }}'/''}"
          REPORT="${REPORT//$'<br/><br/>'/'<br/>'}"
          REPORT="${REPORT//$'<br/>*'/'*'}"
          echo -e "REPORT=$REPORT" >> $GITHUB_ENV

      # Update the release with the change log
      - name: Update Release
        id: update_release
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allow_override: true
          tag: v${{env.CURRENT}}
          gzip: false
          body: >
          
            This is an **experimental build** of a new renderer and APIs. A lot of tools are broken, changes are not documented, and there is a new version of the core engine called PV8 Lite that is intended for developers looking to build games in pure C# as close to the metal as possible with no extra dependencies. 


            You have been warned!

            ***
            
            
            You'll be able to download a preview build of Pixel Vision 8 for Windows, Mac, and Linux (x64 & ARM 64) below. This project is continually updated, and automated builds are made available to allow users to preview new features, bug fixes, and optimizations to the underlying codebase. Please make sure to backup your [Workspace](https://docs.pixelvision8.com/pixelvisionos) before running this or any new build of Pixel Vision 8.


            Due to how large and complex the codebase is, these incremental builds help reduce the time between releases and allow the collection developer feedback. Here is a list of the most recent changes:


            ## v${{env.CURRENT}}
            
            ${{ env.REPORT }}. 
            
            
            In addition, you can see the current open issues [here](https://github.com/PixelVision8/PixelVision8/issues) or use one of the following links to submit a new [bug](https://github.com/PixelVision8/PixelVision8/issues/new?assignees=jessefreeman&labels=bug&template=bug_report.md), [feature](https://github.com/PixelVision8/PixelVision8/issues/new?assignees=jessefreeman&labels=bug&template=feature_request.md) or [question](https://github.com/PixelVision8/PixelVision8/issues/new?assignees=jessefreeman&labels=bug&template=question.md). To learn more about Pixel Vision 8, check out [the documentation](https://docs.pixelvision8.com/), explore [the examples](https://www.pixelvision8.com/examples), join [the Discord server](https://discord.gg/pixelvision8), and visit [the main website](https://www.pixelvision8.com/).
